type Article implements Node {
  articleCategory: ArticleCategory!
  body: String
  comments: [Comment!]
  createdAt: ISO8601DateTime
  id: ID!
  isDeleted: Boolean
  isPublic: Boolean
  justCreated: Boolean
  publicDate: ISO8601DateTime
  slug: String
  tags: [String!]
  thumnailUrl: String
  title: String
  updatedAt: ISO8601DateTime
  user: User!
}

type ArticleCategory implements Node {
  createdAt: String
  id: ID!
  isDeleted: Boolean
  name: String
  tags: [String!]
  updatedAt: String
}

"""The connection type for ArticleCategory."""
type ArticleCategoryConnection {
  """A list of edges."""
  edges: [ArticleCategoryEdge]

  """A list of nodes."""
  nodes: [ArticleCategory]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
  totalPages: Int!
}

"""An edge in a connection."""
type ArticleCategoryEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: ArticleCategory
}

input ArticleCategoryFilter {
  OR: [ArticleCategoryFilter!]
  endDate: String
  isDeleted: Boolean
  name: String
  startDate: String
  tags: [String!]
}

"""The connection type for Article."""
type ArticleConnection {
  """A list of edges."""
  edges: [ArticleEdge]

  """A list of nodes."""
  nodes: [Article]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
  totalPages: Int!
}

"""An edge in a connection."""
type ArticleEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Article
}

input ArticleFilter {
  OR: [ArticleFilter!]
  articleCategoryId: String
  body: String
  endDate: String
  isDeleted: Boolean
  isPublic: Boolean
  justCreated: Boolean
  publicDate: String
  searchKeyword: String
  slug: String
  startDate: String
  tags: [String!]
  thumnailUrl: String
  title: String
}

type Comment implements Node {
  article: Article!
  body: String
  createdAt: String
  from: String
  id: ID!
  isDeleted: Boolean
  updatedAt: String
}

"""The connection type for Comment."""
type CommentConnection {
  """A list of edges."""
  edges: [CommentEdge]

  """A list of nodes."""
  nodes: [Comment]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
  totalPages: Int!
}

"""An edge in a connection."""
type CommentEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Comment
}

input CommentFilter {
  OR: [CommentFilter!]
  articleId: String
  body: String
  endDate: String
  from: String
  isDeleted: Boolean
  startDate: String
}

"""Autogenerated input type of CreateArticleCategory"""
input CreateArticleCategoryInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  isDeleted: Boolean
  name: String
  tags: [String!]
}

"""Autogenerated return type of CreateArticleCategory"""
type CreateArticleCategoryPayload {
  articleCategoryEdge: ArticleCategoryEdge!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  error: String
}

"""Autogenerated input type of CreateArticle"""
input CreateArticleInput {
  articleCategoryId: String
  body: String

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  isDeleted: Boolean
  isPublic: Boolean
  justCreated: Boolean
  publicDate: String
  slug: String
  tags: [String!]
  thumnailUrl: String
  title: String
}

"""Autogenerated return type of CreateArticle"""
type CreateArticlePayload {
  articleEdge: ArticleEdge!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  error: String
}

"""Autogenerated input type of CreateComment"""
input CreateCommentInput {
  articleId: String
  body: String

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  from: String
  isDeleted: Boolean
}

"""Autogenerated return type of CreateComment"""
type CreateCommentPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  commentEdge: CommentEdge!
  error: String
}

"""Autogenerated input type of CreateUser"""
input CreateUserInput {
  birthday: String
  category: String

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  email: String
  firstName: String
  firstNameKana: String
  firstNameKanji: String
  gender: String
  iconUrl: String
  isDeleted: Boolean
  lang: String
  lastName: String
  lastNameKana: String
  lastNameKanji: String
  rolesMask: Int
  screenName: String
  tel: String
  uid: String
  username: String
}

"""Autogenerated return type of CreateUser"""
type CreateUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  error: String
  userEdge: UserEdge!
}

"""Autogenerated input type of DeleteArticleCategory"""
input DeleteArticleCategoryInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  id: String!
}

"""Autogenerated return type of DeleteArticleCategory"""
type DeleteArticleCategoryPayload {
  articleCategory: ArticleCategory!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated input type of DeleteArticle"""
input DeleteArticleInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  id: String!
}

"""Autogenerated return type of DeleteArticle"""
type DeleteArticlePayload {
  article: Article!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated input type of DeleteComment"""
input DeleteCommentInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  id: String!
}

"""Autogenerated return type of DeleteComment"""
type DeleteCommentPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  comment: Comment!
}

"""Autogenerated input type of DeleteUser"""
input DeleteUserInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  id: String!
}

"""Autogenerated return type of DeleteUser"""
type DeleteUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  user: User!
}

"""Autogenerated input type of DestroyDeleteArticleCategory"""
input DestroyDeleteArticleCategoryInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  id: String!
}

"""Autogenerated return type of DestroyDeleteArticleCategory"""
type DestroyDeleteArticleCategoryPayload {
  articleCategory: ArticleCategory!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated input type of DestroyDeleteArticle"""
input DestroyDeleteArticleInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  id: String!
}

"""Autogenerated return type of DestroyDeleteArticle"""
type DestroyDeleteArticlePayload {
  article: Article!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated input type of DestroyDeleteComment"""
input DestroyDeleteCommentInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  id: String!
}

"""Autogenerated return type of DestroyDeleteComment"""
type DestroyDeleteCommentPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  comment: Comment!
}

"""Autogenerated input type of DestroyDeleteUser"""
input DestroyDeleteUserInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  id: String!
}

"""Autogenerated return type of DestroyDeleteUser"""
type DestroyDeleteUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  user: User!
}

"""An ISO 8601-encoded datetime"""
scalar ISO8601DateTime

type Mutation {
  createArticle(
    """Parameters for CreateArticle"""
    input: CreateArticleInput!
  ): CreateArticlePayload
  createArticleCategory(
    """Parameters for CreateArticleCategory"""
    input: CreateArticleCategoryInput!
  ): CreateArticleCategoryPayload
  createComment(
    """Parameters for CreateComment"""
    input: CreateCommentInput!
  ): CreateCommentPayload
  createUser(
    """Parameters for CreateUser"""
    input: CreateUserInput!
  ): CreateUserPayload
  deleteArticle(
    """Parameters for DeleteArticle"""
    input: DeleteArticleInput!
  ): DeleteArticlePayload
  deleteArticleCategory(
    """Parameters for DeleteArticleCategory"""
    input: DeleteArticleCategoryInput!
  ): DeleteArticleCategoryPayload
  deleteComment(
    """Parameters for DeleteComment"""
    input: DeleteCommentInput!
  ): DeleteCommentPayload
  deleteUser(
    """Parameters for DeleteUser"""
    input: DeleteUserInput!
  ): DeleteUserPayload
  destroyDeleteArticle(
    """Parameters for DestroyDeleteArticle"""
    input: DestroyDeleteArticleInput!
  ): DestroyDeleteArticlePayload
  destroyDeleteArticleCategory(
    """Parameters for DestroyDeleteArticleCategory"""
    input: DestroyDeleteArticleCategoryInput!
  ): DestroyDeleteArticleCategoryPayload
  destroyDeleteComment(
    """Parameters for DestroyDeleteComment"""
    input: DestroyDeleteCommentInput!
  ): DestroyDeleteCommentPayload
  destroyDeleteUser(
    """Parameters for DestroyDeleteUser"""
    input: DestroyDeleteUserInput!
  ): DestroyDeleteUserPayload
  updateArticle(
    """Parameters for UpdateArticle"""
    input: UpdateArticleInput!
  ): UpdateArticlePayload
  updateArticleCategory(
    """Parameters for UpdateArticleCategory"""
    input: UpdateArticleCategoryInput!
  ): UpdateArticleCategoryPayload
  updateComment(
    """Parameters for UpdateComment"""
    input: UpdateCommentInput!
  ): UpdateCommentPayload
  updateUser(
    """Parameters for UpdateUser"""
    input: UpdateUserInput!
  ): UpdateUserPayload
}

"""An object with an ID."""
interface Node {
  """ID of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

type Query {
  article(id: String!): Article!
  articleCategories(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ArticleCategoryConnection
  articleCategory(id: String!): ArticleCategory!

  """Search ArticleCategory"""
  articleCategorySearch(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    filter: ArticleCategoryFilter

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    skip: Int
  ): ArticleCategoryConnection!

  """Search Article"""
  articleSearch(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    filter: ArticleFilter

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    skip: Int
  ): ArticleConnection!
  articles(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ArticleConnection
  comment(id: String!): Comment!

  """Search Comment"""
  commentSearch(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    filter: CommentFilter

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    skip: Int
  ): CommentConnection!
  comments(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): CommentConnection

  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node

  """Fetches a list of objects given a list of IDs."""
  nodes(
    """IDs of the objects."""
    ids: [ID!]!
  ): [Node]!
  user(id: String!): User!

  """Search User"""
  userSearch(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    filter: UserFilter

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    skip: Int
  ): UserConnection!
  users(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): UserConnection
}

"""Autogenerated input type of UpdateArticleCategory"""
input UpdateArticleCategoryInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  id: String!
  isDeleted: Boolean
  name: String
  tags: [String!]
}

"""Autogenerated return type of UpdateArticleCategory"""
type UpdateArticleCategoryPayload {
  articleCategoryEdge: ArticleCategoryEdge!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  error: String
}

"""Autogenerated input type of UpdateArticle"""
input UpdateArticleInput {
  articleCategoryId: String
  body: String

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  id: String!
  isDeleted: Boolean
  isPublic: Boolean
  justCreated: Boolean
  publicDate: String
  slug: String
  tags: [String!]
  thumnailUrl: String
  title: String
}

"""Autogenerated return type of UpdateArticle"""
type UpdateArticlePayload {
  articleEdge: ArticleEdge!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  error: String
}

"""Autogenerated input type of UpdateComment"""
input UpdateCommentInput {
  articleId: String
  body: String

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  from: String
  id: String!
  isDeleted: Boolean
}

"""Autogenerated return type of UpdateComment"""
type UpdateCommentPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  commentEdge: CommentEdge!
  error: String
}

"""Autogenerated input type of UpdateUser"""
input UpdateUserInput {
  birthday: String
  category: String

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  email: String
  firstName: String
  firstNameKana: String
  firstNameKanji: String
  gender: String
  iconUrl: String
  id: String!
  isDeleted: Boolean
  lang: String
  lastName: String
  lastNameKana: String
  lastNameKanji: String
  rolesMask: Int
  screenName: String
  tel: String
  uid: String
  username: String
}

"""Autogenerated return type of UpdateUser"""
type UpdateUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  error: String
  userEdge: UserEdge!
}

type User implements Node {
  articles: [Article!]
  birthday: String
  category: String
  createdAt: String
  email: String
  firstName: String
  firstNameKana: String
  firstNameKanji: String
  gender: String
  iconUrl: String
  id: ID!
  isDeleted: Boolean
  lang: String
  lastName: String
  lastNameKana: String
  lastNameKanji: String
  rolesMask: Int
  screenName: String
  tel: String
  uid: String
  updatedAt: String
  username: String
}

"""The connection type for User."""
type UserConnection {
  """A list of edges."""
  edges: [UserEdge]

  """A list of nodes."""
  nodes: [User]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
  totalPages: Int!
}

"""An edge in a connection."""
type UserEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: User
}

input UserFilter {
  OR: [UserFilter!]
  birthday: String
  category: String
  email: String
  endDate: String
  firstName: String
  firstNameKana: String
  firstNameKanji: String
  gender: String
  iconUrl: String
  isDeleted: Boolean
  lang: String
  lastName: String
  lastNameKana: String
  lastNameKanji: String
  rolesMask: Int
  screenName: String
  startDate: String
  tel: String
  uid: String
  username: String
}
